{
  ".html": {
    "html-spa": {
      "prefix": "!html-spa",
      "body":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<link rel=\"icon\" href=\"data:image/x-icon;base64,\">\n\t<title>${1:Single Page App}</title>\n\n</head>\n\n<body>\n\n\t<spa-component src=\"${2:appRoot}\"></spa-component>\n$0\n\t<script src=\"${3://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js}\"></script>\n\t<script src=\"${4://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.min.js}\"></script>\n\t<script src=\"${5://cdn.jsdelivr.net/gh/sucom/SPA.js/dist/spa-bundle.min.js}\"></script>\n\n</body>\n\n</html>",
      "description": "SPA - HTML boilerplate"
    },
    "html-spa-bs": {
      "prefix": "!html-spa+bootstrap",
      "body":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n\t<meta charset=\"UTF-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t<link rel=\"icon\" href=\"data:image/x-icon;base64,\">\n\t<title>${1:Single Page App}</title>\n\n\t<link rel=\"stylesheet\" href=\"${8://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css}\" />\n\n</head>\n\n<body>\n\n\t<spa-component src=\"${2:appRoot}\"></spa-component>\n$0\n\t<script src=\"${3://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js}\"></script>\n\t<script src=\"${4://cdn.jsdelivr.net/npm/popper.js@latest/dist/umd/popper.min.js}\"></script>\n\t<script src=\"${5://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js}\"></script>\n\t<script src=\"${6://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.min.js}\"></script>\n\t<script src=\"${7://cdn.jsdelivr.net/gh/sucom/SPA.js/dist/spa-bundle.min.js}\"></script>\n\n</body>\n\n</html>",
      "description": "SPA - HTML boilerplate with Bootstrap"
    },
    "html-spa-component": {
      "prefix": ["!template-component", "-container"],
      "body":"<${1:section} class=\"container${2:-}component$3\" id=\"c_${TM_DIRECTORY/.*components(\\/|\\\\)(([^\\/\\\\]*)(\\/|\\\\)?)|(\\/|\\\\)([^\\/\\\\]*)/$3${4:+_}${6:+_}$6/g}\">\n\t$0\n</${1:section}>",
      "description": "SPA - HTML component boilerplate"
    },

    "html5": {
      "prefix": "!!",
      "body": [ "<!DOCTYPE html>\n<html lang=\"en\">\n<head>"
              , "\t<meta charset=\"UTF-8\">"
              , "\t<link rel=\"icon\" href=\"data:image/x-icon;base64,\">"
              , "\t<title>${1:Title}</title>"
              , "</head>\n<body>\n\t$0\n</body>\n</html>" ]
    },

    "cdn-bs-css" : {
      "prefix": ["cdn:bs-css", "cdn:boot-css"],
      "body": "<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/bootstrap@${1:4.5.0}/dist/css/bootstrap.min.css\">$0",
      "description": "Bootstrap CSS cdn link[href]"
    },
    "cdn-bs-js" : {
      "prefix": ["cdn:bs-js", "cdn:boot-js"],
      "body": [
        "<script src=\"//cdn.jsdelivr.net/npm/jquery@${1:latest}/dist/jquery.min.js\"></script>",
        "<script src=\"//cdn.jsdelivr.net/npm/popper.js@${1:latest}/dist/umd/popper.min.js\"></script>",
        "<script src=\"//cdn.jsdelivr.net/npm/bootstrap@${1:4.5.0}/dist/js/bootstrap.min.js\"></script>$0"],
      "description": "Bootstrap JS cdn script[src]"
    },
    "cdn-spa-js" : {
      "prefix": "cdn:spa",
      "body": [
        "<script src=\"//cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js\"></script>",
        "<script src=\"//cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.min.js\"></script>",
        "<script src=\"//cdn.jsdelivr.net/gh/sucom/SPA.js/dist/spa-bundle.min.js\"></script>$0"],
      "description": "SPA JS cdn script[src]"
    },
    "cdn-jq-js" : {
      "prefix": "cdn:jq",
      "body": "<script src=\"//cdn.jsdelivr.net/npm/jquery@${1:latest}/dist/jquery.min.js\"></script>$0",
      "description": "jQuery cdn script[src]"
    },
    "cdn-jq-js-slim" : {
      "prefix": "cdn:jq-slim",
      "body": "<script src=\"//cdn.jsdelivr.net/npm/jquery@${1:latest}/dist/jquery.slim.min.js\"></script>$0",
      "description": "jQuery-slim cdn script[src]"
    },
    "cdn-handlebars-js" : {
      "prefix": "cdn:handlebars",
      "body": "<script src=\"//cdn.jsdelivr.net/npm/handlebars@${1:latest}/dist/handlebars.min.js\"></script>$0",
      "description": "Handlebars cdn script[src]"
    },
    "cdn-lodash-js" : {
      "prefix": "cdn:lodash",
      "body": "<script src=\"//cdn.jsdelivr.net/npm/lodash@${1:latest}/lodash.min.js\"></script>$0",
      "description": "Lodash cdn script[src]"
    },
    "cdn-alt-iframe-es5": {
      "prefix": "cdn:altiframe-es5",
      "body": "<script src=\"//cdn.jsdelivr.net/gh/FrontEndNeo/alt-iframe/dist/es5/alt-iframe.min.js\"></script>$0"
    },
    "cdn-alt-iframe-es6": {
      "prefix": "cdn:altiframe-es6",
      "body": "<script src=\"//cdn.jsdelivr.net/gh/FrontEndNeo/alt-iframe/dist/es6/alt-iframe.min.js\"></script>$0"
    },

    "meta-seo" : {
      "prefix": "meta:seo",
      "body": [
        "<meta name=\"robots\" content=\"index,follow\" />",
        "<meta name=\"keywords\" content=\"${1}\" />",
        "<meta name=\"description\" content=\"${2}\" />$0"],
      "description": "meta tags for SEO"
    },
    "meta-no-cache" : {
      "prefix": "meta:cache",
      "body": [
        "<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\" />",
        "<meta http-equiv=\"Pragma\" content=\"no-cache\" />",
        "<meta http-equiv=\"Expires\" content=\"0\" />$0"],
      "description": "meta tags for no-cache"
    },

    "fav-icon" : {
      "prefix": ["fav:icon"],
      "body": "<link rel=\"icon\" type=\"image/${1:png}\" href=\"${2:favicon.png}\" />$0",
      "description": "meta tags for fav-icon"
    },
    "fav-base64": {
      "prefix": "fav:base64",
      "body": "<link rel=\"icon\" href=\"data:image/x-icon;base64,\">$0"
    },

    "tag-spa-html": {
      "prefix": ["spa-html"],
      "body": "<spa-html src=\"${1:html-src-path}\"></spa-html>$0",
      "description":"SPA - Load remote html here"
    },
    "tag-x-html": {
      "prefix": ["-html", "x-html"],
      "body": "<x-html src=\"${1:html-src-path}\"></x-html>$0",
      "description":"SPA - Load remote html here"
    },

    "tag-template": {
      "prefix": "template",
      "body": "<template id=\"${1:templateID}\">\n\t$0\n</template>",
      "description":"HTML5 template tag"
    },
    "tag-spa-template": {
      "prefix": ["spa-template"],
      "body": "<spa-template src=\"${1:componentName}\"></spa-template>$0",
      "description":"SPA - Load Template Component here"
    },
    "tag-x-template": {
      "prefix": ["-template", "x-template"],
      "body": "<x-template src=\"${1:componentName}\"></x-template>$0",
      "description":"SPA - Load Template Component here"
    },

    "tag-spa-component": {
      "prefix": ["spa-component", "spa$"],
      "body": "<spa-component src=\"${1:componentName}\"></spa-component>$0",
      "description":"SPA - Render Component here using tag"
    },
    "tag-x-component": {
      "prefix": ["-component", "x-component"],
      "body": "<x-component src=\"${1:componentName}\"></x-component>$0",
      "description":"SPA - Render Component here using tag"
    },

    "attr-data-spa-component": {
      "prefix": [":component", ":spa-component", ":data-spa-component", ":data-x-component"],
      "body": "data-x-component=\"${1:componentName}\"",
      "description":"SPA - Render Component here using attribute"
    },

    "i18n-lang": {
      "prefix": "i18n-lang",
      "body": "i18n-lang=\"${1:en_US}\"",
      "description":"SPA - i18n default language in <body> tag"
    },
    "data-i18n-lang": {
      "prefix": "i18n-lang-switch",
      "body": "data-i18n-lang=\"${1:en_US}\"",
      "description":"SPA - i18n language switch/change"
    },
    "data-i18n": {
      "prefix": ":i18n",
      "body": "data-i18n=\"${1:i18n.key}\"",
      "description":"SPA - i18n label for key"
    },

    "data-spa-route": {
      "prefix": ":route",
      "body": "data-spa-route=\"${1:route-path}\"",
      "description":"SPA - Routing Path"
    },
    "data-spa-route-params": {
      "prefix": ":route-params",
      "body": "data-spa-route-params=\"${1:param1}:'$0'\"",
      "description":"SPA - Routing Parameters"
    },

    "spa-nav-show": {
      "prefix": ":show-nav",
      "body": "SHOW-SPA-NAV",
      "description":"SPA - Navigation control using body class to show url routes."
    },
    "spa-nav-hide": {
      "prefix": ":hide-nav",
      "body": "HIDE-SPA-NAV",
      "description":"SPA - Navigation control using body class to hide url routes."
    },
    "spa-nav-block": {
      "prefix": ":block-nav",
      "body": "BLOCK-SPA-NAV",
      "description":"SPA - Navigation control using body class to block browser's back/forward navigation."
    },

    "spa-defaults-components": {
      "prefix": ["-defaults", "spa-components-defaults"],
      "body" : "data-spa-defaults-components=\"scriptExt:'.js', templateExt:'.html', rootPath:'app/components/', inFolder:true\"",
      "description": "SPA - component's default attributes in body tag"
    },

    "a-rel" : {
      "prefix": ["a-rel", "a:rel"],
      "body" : "rel=\"noopener noreferrer\"",
      "description": "a [rel]"
    },

    "a-target-blank" : {
      "prefix": ["target:blank", "a:target"],
      "body" : "target=\"_blank\" rel=\"noopener noreferrer\"",
      "description": "a [rel]"
    },

    "for" : {
      "prefix": "for",
      "body" : "for$0",
      "description": "for"
    },
    "for-attr" : {
      "prefix": ":for",
      "body" : "for=\"${1:componentName}\"$0",
      "description": "for SPA component"
    },

    "hb-spa$": {
      "prefix": ":$()",
      "body": "{$${1:componentName}}${2:method}();",
      "description":"SPA - HB-helper {$componentName}method();"
    },

    "hb-consoleClear": {
      "prefix": ":consoleClear",
      "body": "{{:consoleClear }}",
      "description":"SPA - HB-helper console.clear"
    },
    "hb-consoleLog": {
      "prefix": ":consoleLog",
      "body": "{{:consoleLog ${1:variable} }}",
      "description":"SPA - HB-helper console.log"
    },

    "hb-trim": {
      "prefix": ":trim",
      "body": "{{:trim ${1:srcStringVariable} }}",
      "description":"SPA - HB-helper trimStr"
    },
    "hb-trimStr": {
      "prefix": ":trimStr",
      "body": "{{:trimStr ${1:srcStringVariable} '${2:trimString}' }}",
      "description":"SPA - HB-helper trimStr"
    },
    "hb-trimLeft": {
      "prefix": ":trimLeft",
      "body": "{{:trimLeft ${1:srcStringVariable} }}",
      "description":"SPA - HB-helper trimLeft"
    },
    "hb-trimLeftStr": {
      "prefix": ":trimLeftStr",
      "body": "{{:trimLeftStr ${1:srcStringVariable} '${2:trimString}' }}",
      "description":"SPA - HB-helper trimLeftStr"
    },
    "hb-trimRight": {
      "prefix": ":trimRight",
      "body": "{{:trimRight ${1:srcStringVariable} }}",
      "description":"SPA - HB-helper trimRight"
    },
    "hb-trimRightStr": {
      "prefix": ":trimRightStr",
      "body": "{{:trimRightStr ${1:srcStringVariable} '${2:trimString}' }}",
      "description":"SPA - HB-helper trimRightStr"
    },

    "hb-replaceString": {
      "prefix": ":replaceString",
      "body": "{{:replace ${1:srcStringVariable} searchStr='${2:searchForString}' replaceStr='${3:replaceWithString}' }}",
      "description":"SPA - HB-helper replace"
    },
    "hb-replaceStringOnRegEx": {
      "prefix": ":replaceStringOnRegEx",
      "body": "{{:replace ${1:srcStringVariable} rxPattern='${2:searchForRegExPattern}' rxOption='${3|g,i,gi|}' replaceStr='${4:replaceWithString}' }}",
      "description":"SPA - HB-helper replace string. Search by RegEx Pattern."
    },

    "hb-getLeftStrByIndex": {
      "prefix": ":getLeftStrByIndex",
      "body": "{{:getLeftStr ${1:srcStringVariable} ${2:fromIndexNumber} }}",
      "description":"SPA - HB-helper getLeftStr"
    },
    "hb-getLeftStrByString": {
      "prefix": ":getLeftStrByString",
      "body": "{{:getLeftStr ${1:srcStringVariable} '${2:fromSplitString}' }}",
      "description":"SPA - HB-helper getLeftStr"
    },
    "hb-getRightStrByIndex": {
      "prefix": ":getRightStrByIndex",
      "body": "{{:getRightStr ${1:srcStringVariable} ${2:fromIndexNumber} }}",
      "description":"SPA - HB-helper getRightStr"
    },
    "hb-getRightStrByString": {
      "prefix": ":getRightStrByString",
      "body": "{{:getRightStr ${1:srcStringVariable} '${2:fromSplitString}' }}",
      "description":"SPA - HB-helper getRightStr"
    },

    "hb-normalize": {
      "prefix": ":normalizeStr",
      "body": "{{:normalize ${1:srcStringVariable} }}",
      "description":"SPA - HB-helper normalize"
    },
    "hb-toLowerCase": {
      "prefix": ":toLowerCase",
      "body": "{{:toLowerCase ${1:srcStringVariable} }}",
      "description":"SPA - HB-helper toLowerCase"
    },
    "hb-toUpperCase": {
      "prefix": ":toUpperCase",
      "body": "{{:toUpperCase ${1:srcStringVariable} }}",
      "description":"SPA - HB-helper toUpperCase"
    },
    "hb-toTitleCase": {
      "prefix": ":toTitleCase",
      "body": "{{:toTitleCase ${1:srcStringVariable} }}",
      "description":"SPA - HB-helper toTitleCase"
    },
    "hb-toString": {
      "prefix": ":toString",
      "body": "{{:toStr ${1:srcObjectVariable} }}",
      "description":"SPA - HB-helper toStr object"
    },
    "hb-toBoolean": {
      "prefix": ":toBoolean",
      "body": "{{:toBool ${1:srcStringVariable} }}",
      "description":"SPA - HB-helper toBoolean X"
    },
    "hb-capitalize": {
      "prefix": ":capitalize",
      "body": "{{:capitalize ${1:srcStringVariable} }}",
      "description":"SPA - HB-helper capitalize"
    },
    "hb-unCapitalize": {
      "prefix": ":unCapitalize",
      "body": "{{:unCapitalize ${1:srcStringVariable} }}",
      "description":"SPA - HB-helper unCapitalize"
    },
    "hb-dateNowMs": {
      "prefix": ":dateNowMs",
      "body": "{{:dateNowMs }}",
      "description":"SPA - HB-helper current time in milliseconds."
    },
    "hb-dateNowFormat": {
      "prefix": ":dateNow",
      "body": "{{:dateNow '${1:formatString}' }}",
      "description":"SPA - HB-helper current date time in given format."
    },
    "hb-dateNowFormatHelp": {
      "prefix": ":dateNowFormatHelp",
      "body": "\n<!-- :dateNow FormatString Help\n*   'YY'   : Full Year (4 digits)\n*   'YYYY' : Full Year (4 digits)\n*   'Y'    : Full Year (4 digits)\n*\n*   'Mmmm' : January\n*   'MMMM' : JANUARY\n*   'Mmm'  : Jan\n*   'MMM'  : JAN\n*   '0M'   : 01 (01-12 month in 2 digits)\n*   'MM'   : 1  ( 1-12 month in 1 digit till 9)\n*\n*   'Dddd' : Sunday\n*   'DDDD' : SUNDAY\n*   'Ddd'  : Sun\n*   'DDD'  : SUN\n*   'Dd'   : Su\n*   'DD'   : SU\n*   '0d'   : 06 (01-31 date in 2 digits)\n*   'dd'   : 6  ( 1-31 date in 1 digit till 9)\n*\n*\n*   '0h'   : 09 (00-23 hour in 2 digits)\n*   'hh'   : 9  ( 0-23 hour in 1 digit till 9)\n*   '0m'   : 05 (00-59 minute in 2 digits)\n*   'mm'   : 5  ( 0-59 minute in 1 digit till 9)\n*   '0s'   : 01 (00-59 seconds in 2 digits)\n*   'ss'   : 1  ( 0-59 seconds in 1 digit till 9)\n*\n*   'ms'   : 456 (milliseconds 0 - 999)\n-->",
      "description":"SPA - HB-helper format string for :dateNow."
    },
    "hb-moment": {
      "prefix": ":moment",
      "body": "{{:moment ${1:srcDateTimeStringVariable} '${2:srcFormatString}' '${3:targetFormatString}' }}",
      "description":"SPA - HB-helper date-time format using moment.js\n** Requires moment.js **\n"
    },
    "hb-rand": {
      "prefix": ":rand",
      "body": "{{:rand ${1:minNumber} ${2:maxNumber} }}",
      "description":"SPA - HB-helper random number between min and max.\n"
    },
    "hb-randPwd": {
      "prefix": ":randPwd",
      "body": "{{:randPwd ${1:passwordLength} '${2:passwordCharacters}' }}",
      "description":"SPA - HB-helper random number between min and max.\n"
    }

  }
}